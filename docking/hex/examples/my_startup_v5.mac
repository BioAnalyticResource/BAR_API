#
#  my_startup_v5.mac 
#
#  This is an example startup file, containing the first "commands" to be 
#  executed by Hex. For it to be invoked, define the environment variable in 
#  your ".login" or ".profile" file:
#
#      setenv HEX_STARTUP $HEX_ROOT/examples/startup_v5.mac
#
#  or 
#
#      export HEX_STARTUP=$HEX_ROOT/examples/startup_v5.mac
#
#  Be aware that the startup file doesn't update any values in the GUI 
#  control panels, so use this file sparingly.
#
#----------------------------------------------------------------------------
#
#  Here are a few of examples of changing parameters at the start of the
#  program...
#
#  Firstly, the program default is to set the scene centre to be the midpoint
#  of the ligand and receptor origins: this is probably sensible but the user 
#  (me) always seems to want to change this behaviour. So a start-up file is
#  the right place to do this. 
#

CENTRE_MOLECULE 0    # make the "receptor" molecule the zoom/rotation centre
                     # (0: receptor, 1: ligand, 2:complex, -1: scene)

#----------------------------------------------------------------------------
#
#  Secondly, using a disc cache for the translation matrices can knock 
#  several minutes off each docking run, so this is worth enabling unless
#  you're very short of disc space (this can use up to 200Mb of disc).
#

DISC_CACHE 1         # use the disc cache (using HEX_CACHE="/the_cache_dir")

#----------------------------------------------------------------------------
#
#  By default, Hex displays atoms coloured by "atom type". With multi-domain
#  proteins, its sometimes nicer to "colour by chain". Uncomment one of the
#  following lines to select the initial colouring scheme ...
#

# MOLECULE_COLOUR_ID -1      # colour molecules "by atom"
# MOLECULE_COLOUR_ID -2      # colour molecules "by chain"

#----------------------------------------------------------------------------
#
#  If the graphics display is fast, you might not want Hex to revert to
#  drawing molecular skeletons when moving molecules. Change here.
#

# MOTION_FILL 0  # draw only molecular skeletons during motion
  MOTION_FILL 1  # draw any molecular surfaces or solid models during motion

#----------------------------------------------------------------------------
#
#  The initial scene that Hex displays should contain the "Hex" logo. This is
#  cute, but it may become tiresome. If you prefer a plain background when
#  the program starts up, uncomment the next line.
#

# NO_LOGO

#----------------------------------------------------------------------------
#
#  Hex was designed for a 3-button Unix-style mouse:
#
#    Button-1 (left button)   primary translation and picking button
#    Button-2 (middle button) primary rotation button
#    Button-3 (right button)  secondard rotation button
#
#  Most MS-Windows machines come with a two-button mouse, often with a
#  central scroll-wheel. By "chording" the scroll-wheel and the right
#  mouse button, Windows can simulate the middle button. But in Hex, its
#  more convenient to "swap" buttons so that the right button acts as
#  the primary rotation button, and the secondary rotation is obtained
#  by chording. On Windows, the default is WINDOWS_MOUSE=1 (2-button),
#  and on Unix its WINDOWS_MOUSE=0 (3-button). Un-comment one of the 
#  following lines to change the default.
#

#  WINDOWS_MOUSE 0
#  WINDOWS_MOUSE 1

#----------------------------------------------------------------------------
#
#  Hex 4.0 has a "Progress" panel which pops up during a docking calculation
#  Its cute, but it does slow down the calculation. The default is to pop-up
#  and show the progress bars. Setting POPUP_PROGRESS=0 stops the panel from
#  popping up. Setting ENABLE_PROGRESS=0 completely blocks the progress panel
#  for faster docking. NB. Disabling the progress panel also means that the
#  graphics window will not update until the calculation is complete.
#
                                                                                
#  POPUP_PROGRESS  0
#  ENABLE_PROGRESS 0

#----------------------------------------------------------------------------
#
#  The next example shows how to specify precisely which browser to use
#  for the on-line manual. Its assumed that the browser can read HTML and 
#  GIF files from the $HEX_ROOT/doc directory. Netscape and Mozilla are
#  basically the same thing, but Mozilla is a better name!
#

 BROWSER_NAME     firefox                  # first choice

# If Hex can't find this, it will then try the following as fall-backs:

 UNIX_BROWSER1    mozilla                  # next fall-back
 UNIX_BROWSER2    netscape                 # final fall-back

 DARWIN_BROWSER1  /Applications/Firefox.app/Contents/MacOS/firefox
 DARWIN_BROWSER2  /Applications/Safari.app/Contents/MacOS/Safari

 WINDOWS_BROWSER1 explorer                 # netscape again
 WINDOWS_BROWSER2 iexplore                 # cough

#
#  On Windows, Hex looks for a browser in the directories listed below, in 
#  addition to the directories in the Windows PATH:
#
#     C:\Program Files\Internet Explorer\
#     C:\Program Files\Mozilla Firefox\
#     C:\Program Files\Netscape\Netscape\
#
#  If Hex can't find the browser you want, you will need to modify the PATH
#  environment variable to include the directory that contains the browser's
#  primary executable. This applies to both Windows and Unix environments.
#  Don't bother trying to put backslashes or filenames with spaces in this
#  file: It won't work! On Windows, you *will have to change* the PATH.
#  On Unix, either change your PATH or just put in the fully qualified 
#  pathname to the browser you want. For example:
#
#     BROWSER_NAME  /usr/bin/X11/netscape
#
#----------------------------------------------------------------------------
